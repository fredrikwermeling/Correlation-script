Readme Correlation Script (Version 250131). 
Fredrik Wermeling, PhD

Overview:
This R script performs correlation analysis on a user provided gene set based on the DepMap CRISPR screen data sets. In this way connections between genes are identified. Such connections could be used to expand custom CRISPR screen libraries in a design setting, and to understand functional gene families in a gene set (analysis setting), e.g. your hit list from a CRISPR screen. 

The script was developed and successfully executed using RStudio version 2024.12.0 Build 467, and R version 4.4.1, using the data.table, igraph, ggplot2, and ggraph R packages.



To run the script:

1. Download the CRISPR gene effect reference list (.csv file) from https://depmap.org/portal/data_page/. The current one is found here: https://depmap.org/portal/data_page/?tab=allData&releasename=DepMap+Public+24Q4&filename=CRISPRGeneEffect.csv

The .csv file (~450mb) is a matrix with gene names and ID# within (), e.g. A1CF (29974), in the first row, and cell lines in the first column, e.g. ACH-000001. The 24Q4 release has 17916 genes and 1178 cell lines. The .csv matrix defines the gene effect from the collection of DepMap CRISPR screen experiments. A negative value indicates that the cell line is negatively impacted (viability and or proliferative capacity) by CRISPRcut targeting of the gene, and a positive value that the cell line is positively impacted by CRISPRcut targeting of the gene. DepMap defines -1 as the cut off for "common essential", thus a gene that is essential for cells. Note that gene effect far beyond -1 can be found in the data set, e.g. for the gene RAN (<-4). 

Make sure to follow the Terms & Conditions linked to the use of the DepMap data sets. Make sure to acknowledge the DepMap consortium as indicated on the DepMap webpage.  

2. Generate a gene list and save as a .txt file. E.g. paste a list of genes (one gene per line) into notepad and save as a .txt.

3. Save the reference list and gene list in a folder. When executed, the script automatically creates an output folder in the same directory as the gene list.

4. Paste the script into RStudio or R. Alternatively, save the script as correlation_script.R and run using source ('path/to/script.R').

5. Define the user parameters in the script (either in the script .txt file or directly in R/RStudio as you are about to execute the script). 

Provide the path to the reference list, and the gene list. 

Define if you want to use the design or analysis mode. The design mode identifies correlations above the cut-off in the gene list compared to all genes in the reference list. The analysis mode only looks for correlations comparing the genes in the gene list. As such, the design mode can generate quite large output files compared to the analysis mode.    

Define the cut-off to use. This is an absolute number, so 0.5 means that all correlations above 0.5 and below -0.5 are identified. 0.3-0.5 is usually a reasonable range to use for the cut-off. Note that quite large files can be generated influenced by the number of genes in your gene list (the more, the larger file), and if you use design or analysis mode (design>>analysis). Note that the cut-off relates to the correlation, which reflects the similarity in gene dependency patterns across the 1000+ cell lines, not the absolute gene effect values discussed above.

The user parameters in the first part of the script that needs to be adjusted by the user:

# User parameters
reference_list_path <- "C:/path/to/Your_Reference_List.csv" 
gene_list_path <- "C:/path/to/Your_Gene_List.txt"
analysis_mode <- "design"  # "analysis" = correlations within the gene list
                             # "design" = correlations with all genes
correlation_cutoff <- 0.5

6. Execute the script.



Output:

The correlations (Pearson’s correlation coefficient) generated by the script relates to the gene effect across all cell lines comparing genes to each other. This is similar to the what can be accessed in the DepMap portal ("Pre-computed Association"), but with the script, it´s done on a list of genes instead of one at a time. 

Five files are generated in the output folder:

- Clusters (.csv). This file lists the genes identified to belong to clusters (2 or more genes that correlate). It defines if the genes were part of the gene list with a * or if these are genes that are selected due to correlations above the cut-off (only in the design mode). The list also defines the mean and standard deviation of the corresponding gene effect.

- Correlation_Network (.eps). This is a vector-based graphic representation of the correlations.

- Correlation_Network (.png). This is a pixel-based graphic representation of the correlations.

- Correlations (.csv). This file lists the pairs of correlating genes and provide the correlation numbers.

- Settings_and_Genes_not_found (.txt). This file defines the parameters used for the analysis. Importantly it identifies genes symbols in the gene list not identified in the reference list. Such genes are thus excluded from the analysis even though they might be relevant. Typically, if you run a list of mouse gene symbols, a lot will not be found, as the DepMap data is based on human cell lines and genes. Still, you should expected that the gene symbols in your gene list will not perfectly match the gene symbols of the references list, even if you search for human genes. An iterative process is suggested, where you (i) try to find synonyms and orthologues for the not found genes, (ii) include the ones you´ve identified in an updated gene list, and (iii) run the script again. Some good resources for finding synonyms and orthologues includes g:Profiler (e.g. https://biit.cs.ut.ee/gprofiler/orth), Ensambl Biomart (https://www.ensembl.org/biomart/martview/), the synonym tool in Green Listed (https://greenlisted.cmm.se/), and the Mouse Genome Informatics (https://www.informatics.jax.org/).       

Version History
250205: Initial release 